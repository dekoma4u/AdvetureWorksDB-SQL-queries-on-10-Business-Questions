
/*
10. Calculate the total revenue generated by each customer for each quarter of the year.
*/
-- Retrieve customer full names, total price, year, and quarter of orders.
-- Retrieve the full name, price, year, and quarter for each order.
SELECT
    CONCAT(DC.FirstName, ', ', DC.LastName) AS Full_Name, -- Combine the first and last names into a full name.
    SUM(FIS.UnitPrice) AS Price, -- Calculate the total price by summing the UnitPrice.
    YEAR(FIS.OrderDate) AS Year, -- Extract the year from the OrderDate.
    CASE
        WHEN DATEPART(quarter, FIS.OrderDate) = 1 THEN 'Q1' -- Set Quarter as 'Q1' if the OrderDate's quarter is 1.
        ELSE '' -- Set Quarter to an empty string for other cases when quarter is not 1.
    END AS Quarter
FROM
    DimCustomer DC
INNER JOIN 
    FactInternetSales FIS ON FIS.CustomerKey = DC.CustomerKey
GROUP BY
    CONCAT(DC.FirstName, ', ', DC.LastName), FIS.OrderDate, YEAR(FIS.OrderDate),
    CASE
        WHEN DATEPART(quarter, FIS.OrderDate) = 1 THEN 'Q1' -- Group by Quarter as 'Q1' if the OrderDate's quarter is 1.
        ELSE '' -- Group by Quarter as an empty string for other cases when quarter is not 1.
    END
ORDER BY 
    CONCAT(DC.FirstName, ', ', DC.LastName) ASC; -- Sort the results by Full_Name in ascending order.

-- Alternatively, this block of codes make removes the empty or null values from the Quarter column.

-- Retrieve the full name, price, year, and quarter for each order, excluding rows with an empty Quarter value.
SELECT
    CONCAT(DC.FirstName, ', ', DC.LastName) AS Full_Name, -- Combine the first and last names into a full name.
    SUM(FIS.UnitPrice) AS Price, -- Calculate the total price by summing the UnitPrice.
    YEAR(FIS.OrderDate) AS Year, -- Extract the year from the OrderDate.
    CASE
        WHEN DATEPART(quarter, FIS.OrderDate) = 1 THEN 'Q1' -- Set Quarter as 'Q1' if the OrderDate's quarter is 1.
        WHEN DATEPART(quarter, FIS.OrderDate) = 2 THEN 'Q2' -- Set Quarter as 'Q2' if the OrderDate's quarter is 2.
        WHEN DATEPART(quarter, FIS.OrderDate) = 3 THEN 'Q3' -- Set Quarter as 'Q3' if the OrderDate's quarter is 3.
        WHEN DATEPART(quarter, FIS.OrderDate) = 4 THEN 'Q4' -- Set Quarter as 'Q4' if the OrderDate's quarter is 4.
        ELSE '' -- Set Quarter to an empty string for other cases when quarter is not 1, 2, 3, or 4.
    END AS Quarter
FROM
    DimCustomer DC
INNER JOIN 
    FactInternetSales FIS ON FIS.CustomerKey = DC.CustomerKey
WHERE
    CASE
        WHEN DATEPART(quarter, FIS.OrderDate) = 1 THEN 'Q1' -- Include rows with Quarter as 'Q1'.
        WHEN DATEPART(quarter, FIS.OrderDate) = 2 THEN 'Q2' -- Include rows with Quarter as 'Q2'.
        WHEN DATEPART(quarter, FIS.OrderDate) = 3 THEN 'Q3' -- Include rows with Quarter as 'Q3'.
        WHEN DATEPART(quarter, FIS.OrderDate) = 4 THEN 'Q4' -- Include rows with Quarter as 'Q4'.
        ELSE '' -- Exclude rows with an empty Quarter value for other cases when quarter is not 1, 2, 3, or 4.
    END <> ''
GROUP BY
    CONCAT(DC.FirstName, ', ', DC.LastName),
    FIS.OrderDate,
    YEAR(FIS.OrderDate),
    CASE
        WHEN DATEPART(quarter, FIS.OrderDate) = 1 THEN 'Q1' -- Group by Quarter as 'Q1' if the OrderDate's quarter is 1.
        WHEN DATEPART(quarter, FIS.OrderDate) = 2 THEN 'Q2' -- Group by Quarter as 'Q2' if the OrderDate's quarter is 2.
        WHEN DATEPART(quarter, FIS.OrderDate) = 3 THEN 'Q3' -- Group by Quarter as 'Q3' if the OrderDate's quarter is 3.
        WHEN DATEPART(quarter, FIS.OrderDate) = 4 THEN 'Q4' -- Group by Quarter as 'Q4' if the OrderDate's quarter is 4.
        ELSE '' -- Group by Quarter as an empty string for other cases when quarter is not 1, 2, 3, or 4.
    END
ORDER BY 
    Full_Name ASC; -- Sort the results by Full_Name in ascending order.